<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.HasHeaders="True" this:Main.ContentFilter="[{&quot;Valor&quot;, &quot;Tomador&quot;, &quot;CTNR&quot;}]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="If this argument is set true, the first line data in table will be considered as its columns names." Name="HasHeaders" Type="InArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="You can pass keywords (either from table headers or table content) to filter which tables should be extracted. All tables that matches the filter will be returned.&#xA;If none is passed or left blank, all tables in mail body will be returned." Name="ContentFilter" Type="InArgument(s:String[])" />
    <x:Property Name="out_listDataTables" Type="OutArgument(scg:List(sd:DataTable))" />
    <x:Property sap2010:Annotation.AnnotationText="As HTML" Name="HTMLText" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <this:Main.HTMLText>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Main.HTMLText>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>486,766</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="78">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPathTeam.ExtractDataTablesFromHTML.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.ExtractDataTablesFromHTML.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Extract HTML table" sap:VirtualizedContainerService.HintSize="496,741" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchesInsideTagTR" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New DataTable]" Name="dataTableTeste" />
      <Variable x:TypeArguments="scg:List(scg:List(x:String))" Default="[New List(Of List(Of String))]" Name="listaLinhas" />
      <Variable x:TypeArguments="x:Int32" Name="columnIndex" />
      <Variable x:TypeArguments="x:String" Default="[String.Format(&quot; \w\={0}\#\;\:\-\'\.\%\,\&amp;&quot;, Chr(34))]" Name="specialChars" />
      <Variable x:TypeArguments="x:String" Default="[String.Format(&quot; \w\={0}\#\;\:\-\'\.&quot;, Chr(34))]" Name="backup" />
      <Variable x:TypeArguments="x:String" Default="[String.Format(&quot;(?&lt;=\&lt;tr[{0}]*\&gt;)[\S\s]+?(?=\&lt;\/tr\&gt;)&quot;, specialChars)]" Name="regexLinhas" />
      <Variable x:TypeArguments="x:String" Default="[String.Format(&quot;(?&lt;=\&lt;td[{0}]*\&gt;)[\s\S]*?(?=\&lt;\/td\&gt;)&quot;, specialChars)]" Name="regexDentroTD" />
      <Variable x:TypeArguments="x:String" Default="[String.Format(&quot;\&lt;p[{0}]*\&gt;&quot;, specialChars)]" Name="regexTagP" />
      <Variable x:TypeArguments="x:String" Default="[String.Format(&quot;\&lt;\w+[{0}]*\&gt;&quot;, specialChars)]" Name="regexAnyTagOpen" />
      <Variable x:TypeArguments="x:String" Default="[String.Format(&quot;\&lt;\/\w+[{0}]*\&gt;&quot;, specialChars)]" Name="regexAnyTagClosure" />
      <Variable x:TypeArguments="scg:List(str:Match)" Name="listMatchesTables" />
      <Variable x:TypeArguments="sd:DataTable[]" Name="dataTables" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadTextFile File="{x:Null}" Content="[HTMLText]" DisplayName="Read Text File" FileName="text.txt" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadTextFile>
    <Sequence DisplayName="Initialize env" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Sequence_22">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[ContentFilter Is Nothing]" DisplayName="If - default &quot;ContentFilter&quot;" sap:VirtualizedContainerService.HintSize="484,271" sap2010:WorkflowViewState.IdRef="If_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Assign DisplayName="Assign - set as empty array" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_18">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[ContentFilter]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[{}]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
      </If>
      <Assign DisplayName="Assign - list datatables" sap:VirtualizedContainerService.HintSize="484,82" sap2010:WorkflowViewState.IdRef="Assign_23">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(sd:DataTable)">[out_listDataTables]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(sd:DataTable)">[New List(Of DataTable)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExtractTablesOccurrence workflow" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflows\ExtractTablesOccurrence.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_specialChars">[specialChars]</InArgument>
        <OutArgument x:TypeArguments="scg:List(str:Match)" x:Key="out_listMatchesTables">[listMatchesTables]</OutArgument>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_contentFilter">[ContentFilter]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_HTMLText">[HTMLText]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each table matched" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[listMatchesTables]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="str:Match">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="str:Match" Name="table" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Extract content" sap:VirtualizedContainerService.HintSize="596,1593" sap2010:WorkflowViewState.IdRef="Sequence_18">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:List(str:Match)" Name="listMatchesTR" />
              <Variable x:TypeArguments="scg:List(scg:List(x:String))" Name="listRows" />
              <Variable x:TypeArguments="sd:DataTable" Name="dtCreated" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SeparateTagTR workflow" sap:VirtualizedContainerService.HintSize="534,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflows\SeparateTagTR.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_tableHTML">[table.Value]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_specialChars">[specialChars]</InArgument>
                <OutArgument x:TypeArguments="scg:List(str:Match)" x:Key="out_listMatchesTR">[listMatchesTR]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <Assign DisplayName="Assign - listRows" sap:VirtualizedContainerService.HintSize="534,82" sap2010:WorkflowViewState.IdRef="Assign_20">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(scg:List(x:String))">[listRows]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(scg:List(x:String))">[New List(Of List(Of String))]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each - tagTR" sap:VirtualizedContainerService.HintSize="534,989" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[listMatchesTR]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="str:Match">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="str:Match" Name="tagTR" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Separate and process content" sap:VirtualizedContainerService.HintSize="498,864" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:List(str:Match)" Name="listMatchesTD" />
                      <Variable x:TypeArguments="scg:List(x:String)" Name="listData" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - listData" sap:VirtualizedContainerService.HintSize="436,81" sap2010:WorkflowViewState.IdRef="Assign_22">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(x:String)">[listData]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SeparateTagTD workflow" sap:VirtualizedContainerService.HintSize="436,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Workflows\SeparateTagTD.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_specialChars">[specialChars]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_contentTR">[tagTR.Value]</InArgument>
                        <OutArgument x:TypeArguments="scg:List(str:Match)" x:Key="out_listMatchesTD">[listMatchesTD]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each - tag TD" sap:VirtualizedContainerService.HintSize="436,414" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[listMatchesTD]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="str:Match">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="str:Match" Name="tagTD" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Process content" sap:VirtualizedContainerService.HintSize="400,289" sap2010:WorkflowViewState.IdRef="Sequence_21">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="rawContent" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ProcessContenTD workflow" sap:VirtualizedContainerService.HintSize="338,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Workflows\ProcessContentTD.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_specialChars">[specialChars]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_formattedContent">[tagTD.Value]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_rawContent">[rawContent]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <AddToCollection x:TypeArguments="x:String" Collection="[listData]" DisplayName="Add To Collection - listData" sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[rawContent]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEach>
                    <AddToCollection x:TypeArguments="scg:List(x:String)" Collection="[listRows]" DisplayName="Add To Collection - listRows" sap:VirtualizedContainerService.HintSize="436,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[listData]" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BuildDataTable workflow" sap:VirtualizedContainerService.HintSize="534,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Workflows\BuildDataTable.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:List(scg:List(x:String))" x:Key="in_listRows">[listRows]</InArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_hasHeaders">[HasHeaders]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtCreated">[dtCreated]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <AddToCollection x:TypeArguments="sd:DataTable" Collection="[out_listDataTables]" DisplayName="Add To Collection - dtCreated" sap:VirtualizedContainerService.HintSize="534,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[dtCreated]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;ok&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CommentOut_7">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,470" sap2010:WorkflowViewState.IdRef="Sequence_20">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:Matches sap2010:Annotation.AnnotationText="SEPARA AS TAGS TR" DisplayName="Matches - Separa linhas (tags TR)" sap:VirtualizedContainerService.HintSize="338,83" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[HTMLText]" IsBuilderTabModified="False" Pattern="[regexLinhas]" RegexOption="IgnoreCase, Compiled" Result="[matchesInsideTagTR]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:Matches>
          <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each - Tag TR" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[matchesInsideTagTR]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="str:Match">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="str:Match" Name="contentInsideTagTR" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Buscar cada dado presente em cada TD" sap:VirtualizedContainerService.HintSize="428,328" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchesInsideTagTD" />
                    <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="listDados" />
                    <Variable x:TypeArguments="x:String" Name="rawContent" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches DisplayName="Matches - content inside tag TD" sap:VirtualizedContainerService.HintSize="366,60" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[contentInsideTagTR.Value]" IsBuilderTabModified="False" Pattern="[regexDentroTD]" RegexOption="IgnoreCase, Compiled" Result="[matchesInsideTagTD]" />
                  <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each - conteudo dentro de cada TD, remover tags" sap:VirtualizedContainerService.HintSize="366,52" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[matchesInsideTagTD]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="str:Match">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="str:Match" Name="contentInsideTagTD" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Remover tags dentro de cada TD" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign - resetar dadoTransf" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_12">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[rawContent]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[contentInsideTagTD.Value.Trim.Replace(Environment.NewLine, "").Replace(vbLf, "")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Replace DisplayName="Replace - &lt;p&gt; por &lt;br&gt;" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Replace_1" Input="[rawContent]" IsBuilderTabModified="False" Pattern="[regexTagP]" RegexOption="IgnoreCase, Compiled" Replacement="&lt;br&gt;" Result="[rawContent]" />
                          <Assign DisplayName="Assign - pular linha" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[rawContent]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[rawContent.Replace("&lt;br&gt;", Environment.NewLine)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Replace DisplayName="Replace - qualquer tag por &quot;&quot;" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Replace_2" Input="[rawContent]" IsBuilderTabModified="False" Pattern="[regexAnyTagOpen]" RegexOption="IgnoreCase, Compiled" Result="[rawContent]">
                            <ui:Replace.Replacement>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:Replace.Replacement>
                          </ui:Replace>
                          <ui:Replace DisplayName="Replace - qualquer fechamento tag por &quot;&quot;" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Replace_4" Input="[rawContent]" IsBuilderTabModified="False" Pattern="[regexAnyTagClosure]" RegexOption="IgnoreCase, Compiled" Result="[rawContent]">
                            <ui:Replace.Replacement>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:Replace.Replacement>
                          </ui:Replace>
                          <Assign DisplayName="Assign - remove unnecessary breaklines" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_16">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[rawContent]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[String.Join(Environment.NewLine, Split(rawContent, Environment.NewLine).Select(Function(e) e.Trim).ToList)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <AddToCollection x:TypeArguments="x:String" Collection="[listDados]" DisplayName="Add To Collection dados da linha" sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[rawContent.Trim]" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <AddToCollection x:TypeArguments="scg:List(x:String)" Collection="[listaLinhas]" DisplayName="Add To Collection - lista linhas" sap:VirtualizedContainerService.HintSize="366,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[listDados]" />
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[columnIndex]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[listaLinhas(0)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="linha" />
                </ActivityAction.Argument>
                <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" Unique="{x:Null}" ColumnName="[&quot;Column-&quot; + columnIndex.ToString]" DataTable="[dataTableTeste]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" MaxLength="-1" />
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:ForEach x:TypeArguments="scg:List(x:String)" CurrentIndex="{x:Null}" DisplayName="For Each - fill datatable" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[listaLinhas]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="scg:List(x:String)">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="scg:List(x:String)" Name="linha" />
                </ActivityAction.Argument>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[linha.ToArray]" DataTable="[dataTableTeste]" DisplayName="Add Data Row - data" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>